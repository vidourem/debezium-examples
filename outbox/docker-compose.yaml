version: '3'

services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 4317:4317
      - 16686:16686
    environment:
      - COLLECTOR_OTLP_ENABLED=true
  zookeeper:
    image: quay.io/debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  order-db:
    image: quay.io/debezium/example-postgres:${DEBEZIUM_VERSION}
    ports:
     - 5433:5432
    healthcheck:
      test: "pg_isready -U postgresuser -d orderdb"
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 60s
    environment:
     - POSTGRES_USER=postgresuser
     - POSTGRES_PASSWORD=postgrespw
     - POSTGRES_DB=orderdb
     - PGPASSWORD=postgrespw
  shipment-db:
    image: quay.io/debezium/example-postgres:${DEBEZIUM_VERSION}
    ports:
      - 5434:5432
    healthcheck:
      test: "pg_isready -U postgresuser -d shipmentdb"
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 60s
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=shipmentdb
      - PGPASSWORD=postgrespw
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
  connect:
    #TODO rename
    image: debezium/strimzi-connect
    build:
      context: debezium-strimzi
    ports:
      - 8083:8083
    links:
      - kafka
      - order-db
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my-connect-configs
      - OFFSET_STORAGE_TOPIC=my-connect-offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - OTEL_SERVICE_NAME=kafka-connect
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - OTEL_TRACES_SAMPLER=always_on
      - OTEL_INSTRUMENTATION_KAFKA_ENABLED="false"
    depends_on:
      kafka:
        condition: service_started
  order-service:
    image: debezium-examples/outbox-order-service:${DEBEZIUM_VERSION}
    build:
      context: order-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_BUILD:-jvm}
    ports:
     - 8080:8080
    links:
     - kafka
     - order-db
     - jaeger
    environment:
     - QUARKUS_DEBEZIUM_OUTBOX_REMOVE_AFTER_INSERT=false
     - QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
    depends_on:
      order-db:
        condition: service_healthy
      connect:
        condition: service_started
    command: "./application -Dquarkus.datasource.jdbc.url=jdbc:postgresql://order-db:5432/orderdb?currentSchema=inventory -Dquarkus.datasource.username=postgresuser -Dquarkus.datasource.password=postgrespw"
  shipment-service:
    image: debezium-examples/outbox-shipment-service:${DEBEZIUM_VERSION}
    build:
      context: shipment-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_BUILD:-jvm}
    links:
     - kafka
     - shipment-db
     - jaeger
    environment:
      - QUARKUS_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
    depends_on:
      shipment-db:
        condition: service_healthy
      connect:
        condition: service_started
